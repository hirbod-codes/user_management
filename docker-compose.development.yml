version: '3.8'
services:
    user_management:
        container_name: user_management
        build:
            context: ./
            dockerfile: Dockerfile.development
        volumes:
            - ./:/app:rw
        ports:
            - '5000:5000'
            - '5001:5001'
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true
        depends_on:
            - user_management_mongodb
        networks:
            - frontend
            - user_management_mongodb
    user_management_mongo_express:
        container_name: user_management_mongo_express
        image: mongo-express:0.54.0
        restart: always
        ports:
            - '8081:8081'
        depends_on:
            - user_management_mongodb
        networks:
            - user_management_mongodb
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: <placeholder>
            ME_CONFIG_MONGODB_ADMINPASSWORD: <placeholder>
            ME_CONFIG_MONGODB_SERVER: <placeholder>
            ME_CONFIG_BASICAUTH_USERNAME: <placeholder>
            ME_CONFIG_BASICAUTH_PASSWORD: <placeholder>
            ME_CONFIG_MONGODB_AUTH_DATABASE: <placeholder>
    user_management_mongodb:
        container_name: user_management_mongodb
        image: mongo:4.4.18
        ports:
            - '8082:<port>'
        command: >-
            mongos --configdb user_management_configReplicaSet1/user_management_configServer1:<port>,user_management_configServer2:<port>,user_management_configServer3:<port> --bind_ip 0.0.0.0 --port <port>
        networks:
            - user_management_mongodb
    user_management_configServer1:
        container_name: user_management_configServer1
        image: mongo:4.4.18
        command: >-
            mongod --configsvr --replSet user_management_configReplicaSet1 --port <port> --dbpath /data/db
        volumes:
            - user_management_configServer1:/data/db
        networks:
            - user_management_mongodb
    user_management_configServer2:
        container_name: user_management_configServer2
        image: mongo:4.4.18
        command: >-
            mongod --configsvr --replSet user_management_configReplicaSet1 --port <port> --dbpath /data/db
        volumes:
            - user_management_configServer2:/data/db
        networks:
            - user_management_mongodb
    user_management_configServer3:
        container_name: user_management_configServer3
        image: mongo:4.4.18
        command: >-
            mongod --configsvr --replSet user_management_configReplicaSet1 --port <port> --dbpath /data/db
        volumes:
            - user_management_configServer3:/data/db
        networks:
            - user_management_mongodb
    user_management_shardServer1:
        container_name: user_management_shardServer1
        image: mongo:4.4.18
        command: >-
            mongod --shardsvr --replSet user_management_shardReplicaSet1 --port <port> --dbpath /data/db
        volumes:
            - user_management_shardServer1:/data/db
        networks:
            - user_management_mongodb
    user_management_shardServer2:
        container_name: user_management_shardServer2
        image: mongo:4.4.18
        command: >-
            mongod --shardsvr --replSet user_management_shardReplicaSet1 --port <port> --dbpath /data/db
        volumes:
            - user_management_shardServer2:/data/db
        networks:
            - user_management_mongodb
    user_management_shardServer3:
        container_name: user_management_shardServer3
        image: mongo:4.4.18
        command: >-
            mongod --shardsvr --replSet user_management_shardReplicaSet1 --port <port> --dbpath /data/db
        volumes:
            - user_management_shardServer3:/data/db
        networks:
            - user_management_mongodb
volumes:
    user_management_configServer1: {}
    user_management_configServer2: {}
    user_management_configServer3: {}
    user_management_shardServer1: {}
    user_management_shardServer2: {}
    user_management_shardServer3: {}
networks:
    user_management_mongodb:
        driver: bridge
    frontend:
        driver: bridge
